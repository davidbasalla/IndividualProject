Coding Journal:
============


02/08/14:
=======


Learnt interesting thing, the renderers are not hooked up to receive events from a modified volume, ONLY the first one is. This stumped me for quite a while.
Still generally unsure how updating works, there’s a strange goog.base(this, ‘modified’) function that seems to be doing some magic other than just calling ‘update(…)’

had a thought about caching generated groups of slices...

------------

Finished some work on colorLookup today
still some stuff left to do on it
	figure out how to reset the volume to use no colorlookup
should be simple but so far proving illusive
	create a JET map
use python to modulate the colours more easily
looked into 3DSlicer but no real help
Generally wondering whether the lookup should be happening on a 2D level rather than at a ‘3D’ level… 
look into the code to see if it’s feasible to change the pixel values at a pixel by pixel level…, not reloading the volume every time. Could prove to be 
issue that a lookup in the current way is very absolute, not really a lookup but more like a colouring. Should be a mapping of pixels really…? Could get confusing



03/08/14:
========

- managed to get a JET/HEAT map working, with python to create the txt
  file and using Ben Glockers Heatmap
  - seems to look fine, maybe a bit off	
  - still doubt about application of this lookup, still need to
    investigate the code to see if different method is possible

- started thinking about - ANNOTATIONS vs PAINTING
  Annotations seems simpler, mainly due lack of NII file handling
  - for NII file handling, would need to be able to save
    out a file
  - for annotations, XML file format might work fine?
  - conceptually simpler to think of Annotations

- DID MANAGE TO GET QUICKER LOOKUPS WORKING!!!!!!
  - works great
  - need to guard against bad inputs (number wise for the lookups)
    - use like a clipping/flooring to highest/lowest number in lookup
      array
  - need to apply this to 3D renderer now	

04/08/14:
========

- wondering if there is a debugger for JAVASCRIPT!? POSSIBLY A
  QUESTION AT PRESENTATION - yes it exists, quite handy! should try
  out more

- looking for 3D color lookup! finally found it
- it's in shaders, written in glshader language...
- lots of vec3's and vec4's

- balls, managed to get it working in the renderer3D.update_()
  function, but it needs to happen in the render phase...
  
  so means I would have to do this work in the shader...?
  maybe not, not need to test forcing an update when changing the
  window for 3D

- MAYBE GIVE IT A REST FOR NOW, CHECK WITH BEN GLOCKER ABOUT DESIRED
  BEHAVIOUR OF THESE BASTARDS...
  2D and 3D apply the brightness/windowing at different stages,
  so different effect when using different color maps!

05/08/14:
========

- working on reading in XML files
  - going okay so far, seems cumbersome to deal with, with nested
    jquery calls
  - investigate JSON format (DEFINITELY SEEMS LIKE A BETTER ALTERNATIVE!!)

- need to have a separate model for these annotations?
- renderer views need to know about the annotation
- a way to store annotations as part of the layer item? INVESTIGATE
  
- NEED TO GET ONTO THIS USERCASE STUDY SOON!! ASK BEN IF HE KNOWS ANY
  PEOPLE?


06/08/14:
=========

- awkward handling of anno model to anno object...
  - easier to keep annotations as objects and not models?
  - JSON seems really intuitive to use for this...
